############################################################################################################
################################ Gravitee.IO Management API - Configuration ################################
############################################################################################################

############################################################################################################
# This file is the general configuration of Gravitee.IO Management API:
# - Properties (and respective default values) in comment are provided for information.
# - You can reference other property by using ${property.name} syntax
# - gravitee.home property is automatically set-up by launcher and refers to the installation path. Do not override it !
#
# Please have a look to http://docs.gravitee.io/ for more options and fine-grained granularity
############################################################################################################

# HTTP Server
#jetty:
#  port: 8084
#  idleTimeout: 30000
#  acceptors: -1
#  selectors: -1
#  pool:
#    minThreads: 10
#    maxThreads: 200
#    idleTimeout: 60000
#    queueSize: 6000
#  jmx: false
#  statistics: false
#  accesslog:
#    enabled: true
#    path: ${gravitee.home}/logs/gravitee_accesslog_yyyy_mm_dd.log

# Path to plugins repository
#plugins:
#  path: ${gravitee.home}/plugins

# Management repository is used to store global configuration such as APIs, applications, apikeys, ...
# This is the default configuration using MongoDB (single server)
# For more information about MongoDB configuration, please have a look to:
# - http://api.mongodb.org/java/current/com/mongodb/MongoClientOptions.html
management:
  type: mongodb
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}
#    username:
#    password:
#    connectionsPerHost: 0
#    connectTimeout: 500
#    maxWaitTime: 120000
#    socketTimeout: 500
#    socketKeepAlive: false
#    maxConnectionLifeTime: 0
#    maxConnectionIdleTime: 0
#    serverSelectionTimeout: 0
#    description: gravitee.io
#    heartbeatFrequency: 10000
#    minHeartbeatFrequency: 500
#    heartbeatConnectTimeout: 1000
#    heartbeatSocketTimeout: 20000
#    localThreshold: 15
#    minConnectionsPerHost: 0
#    sslEnabled: false
#    threadsAllowedToBlockForConnectionMultiplier: 5
#    cursorFinalizerEnabled: true

# Management repository: single MongoDB using URI
# For more information about MongoDB configuration using URI, please have a look to:
# - http://api.mongodb.org/java/current/com/mongodb/MongoClientURI.html
#management:
#  type: mongodb
#  mongodb:
#    uri: mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]

# Management repository: clustered MongoDB
#management:
#  type: mongodb
#  mongodb:
#    servers:
#      - host: mongo1
#        port: 27017
#      - host: mongo2
#        port: 27017
#    dbname: ${ds.mongodb.dbname}
#    connectTimeout: 500
#    socketTimeout: 250

# Analytics repository is used to store all reporting, metrics, healthchecks stored by gateway instances
# This is the default configuration using Elasticearch
analytics:
  type: elasticsearch
  elasticsearch:
    hosts:
      - ${ds.elastic.host}:${ds.elastic.port}

# Authentication and identity sources
# Users can have following roles (authorities):
#  USER: Can access portal and be a member of an API
#  API_PUBLISHER: Can create and manage APIs
#  API_CONSUMER: Can create and manage Applications
#  ADMIN: Can manage global system
security:
  type: basic # authentication type (default to 'basic', possible values : 'basic', 'oauth2')
  providers:  # authentication providers
    - type: memory
      users:
        - user:
          username: user
          # Passwords are encoded using BCrypt
          # Password value: password
          password: $2a$10$9kjw/SH9gucCId3Lnt6EmuFreUAcXSZgpvAYuW2ISv7hSOhHRH1AO
          roles: USER
        - user:
          username: admin
          # Password value: admin
          password: $2a$10$Ihk05VSds5rUSgMdsMVi9OKMIx2yUvMz7y9VP3rJmQeizZLrhLMyq
          roles: ADMIN
        - user:
          username: api1
          # Password value: api1
          password: $2a$10$iXdXO4wAYdhx2LOwijsp7.PsoAZQ05zEdHxbriIYCbtyo.y32LTji
          # You can declare multiple roles using comma separator
          roles: API_PUBLISHER, API_CONSUMER
        - user:
          username: application1
          # Password value: application1
          password: $2a$10$2gtKPYRB9zaVaPcn5RBx/.3T.7SeZoDGs9GKqbo9G64fKyXFR1He.
          roles: API_CONSUMER
    - type: gravitee
      password-encoding: true
#    - type: ldap
      # This is default LDAP configuration for ApacheDS
#      context-source-username: "uid=admin,ou=system"
#      context-source-password: "secret"
#      context-source-url: "ldap://localhost:10389"
#      context-source-base: "c=io,o=gravitee" # the context source base
      # The 'user-dn-patterns' value is a specific pattern used to build the user's DN, for example "uid={0},ou=people". The key "{0}" must be present and will be substituted with the username.
#      user-dn-patterns: "uid={0},ou=people"
      # Search base for user searches. Defaults to "". Only used with user-search-filter.
#      user-search-base: "o=user accounts,c=io,o=gravitee"
      # The LDAP filter used to search for users (optional). For example "(uid={0})". The substituted parameter is the user's login name.
#      user-search-filter: "uid={0}"
      # The search base for group membership searches. Defaults to "".
#      group-search-base: "o=gravitee,o=authorization groups,c=io,o=gravitee"
      # The LDAP filter to search for groups. Defaults to "(uniqueMember={0})". The substituted parameter is the DN of the user.
#      group-search-filter: "member={0}"
      # Specifies the attribute name which contains the role name. Default is "cn".
#      group-role-attribute: "cn"
      # If role-mapping is equals to true (default to false)
      #   Use role-mapper to map LDAP role with internal Gravitee role (syntax { "user_ldap_role" : "user_new_added_ldap_role"})
#      role-mapping: true
#      role-mapper: {
#        GRAVITEE-CONSUMERS: API_CONSUMER,
#        GRAVITEE-PUBLISHERS: API_PUBLISHER,
#        GRAVITEE-ADMINS: ADMIN,
#        GRAVITEE-USERS: USER,
#      }

# SMTP configuration used to send mails
email:
  host: smtp.my.domain
#  port: 465
  from: noreply@my.domain
  username: user@my.domain
  password: password

# Mail templates
#templates:
#  path: ${gravitee.home}/templates

# Referenced properties
ds:
  mongodb:
    dbname: gravitee
    host: localhost
    port: 27017
  elastic:
    host: localhost
    port: 9300

jwt:
  secret: myJWT4Gr4v1t33_S3cr3t
  # Allows to define the end of validity of the token in seconds (default 604800 = a week)
  #expire-after: 604800
  # Allows to define issuer (default gravitee-management-auth)
  #issuer: gravitee-management-auth
  # Allows to define cookie context path (default /)
  #cookie-path: /
  # Allows to define cookie domain (default "")
  #cookie-domain: .gravitee.io
  # Allows to define if cookie secure only (default false)
  #cookie-secure: true
